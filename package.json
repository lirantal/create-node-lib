{
  "name": "module-name",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "lint": "eslint *.js",
    "test": "snyk test && ava",
    "test:watch": "ava --watch",
    "test:coverage": "yarn run lint && nyc --reporter=lcov ava --tap",
    "coverage:view": "opn coverage/lcov-report/index.html",
    "commit": "git-cz",
    "docs": "yarn run docs:code && yarn run docs:api",
    "docs:api": "doxdox *.js --layout bootstrap --output docs/index.html",
    "docs:code": "docco *.js --output docs/code"
  },
  "author": "Liran Tal",
  "license": "MIT",
  "devDependencies": {
    "ava": "^0.17.0",
    "commitizen": "^2.9.5",
    "cz-conventional-changelog": "^1.2.0",
    "docco": "^0.7.0",
    "doxdox": "^2.0.1",
    "eslint": "^3.19.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-ava": "^4.2.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-node": "^4.2.2",
    "eslint-plugin-security": "^1.3.0",
    "nyc": "^10.1.2",
    "opn-cli": "^3.1.0",
    "standard": "^10.0.2",
    "snyk": "^1.34.4"
  },
  "nyc": {
    "statements": 90,
    "branches": 90,
    "functions": 90,
    "lines": 90,
    "reporter": [
      "lcov",
      "text-summary"
    ],
    "cache": true,
    "check-coverage": true
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es6": true
    },
    "plugins": [
      "node",
      "security",
      "ava"
    ],
    "extends": [
      "eslint-config-standard",
      "plugin:ava/recommended",
      "plugin:node/recommended"
    ],
    "rules": {
      "node/no-unsupported-features": "off",
      "node/no-unpublished-require": "off",
      "security/detect-non-literal-fs-filename": "error",
      "security/detect-unsafe-regex": "error",
      "security/detect-buffer-noassert": "error",
      "security/detect-child-process": "error",
      "security/detect-disable-mustache-escape": "error",
      "security/detect-eval-with-expression": "error",
      "security/detect-no-csrf-before-method-override": "error",
      "security/detect-non-literal-regexp": "error",
      "security/detect-non-literal-require": "error",
      "security/detect-object-injection": "error",
      "security/detect-possible-timing-attacks": "error",
      "security/detect-pseudoRandomBytes": "error"
    },
    "parserOptions": {
      "ecmaFeatures": {
        "impliedStrict": true
      }
    }
  }
}